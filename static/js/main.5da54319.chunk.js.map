{"version":3,"sources":["components/Modal.js","hooks/useModal.js","components/ImageCard.js","components/ImageSearch.js","App.js","index.js"],"names":["Modal","isOpen","hide","image","ReactDOM","createPortal","className","aria-modal","aria-hidden","tabIndex","role","data-dismiss","aria-label","onClick","src","alt","document","body","useModal","useState","setIsOpen","toggle","ImageCard","tags","split","webformatURL","style","height","width","largeImageURL","user","userImageURL","views","downloads","likes","map","tag","index","key","ImageSearch","searchText","search","setSearch","onSubmit","e","preventDefault","type","placeholder","onChange","target","value","App","images","setImages","isLoading","setIsLoading","searchTerm","setSearchTerm","useEffect","a","fetch","process","request","json","data","hits","err","console","log","text","length","id","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5da54319.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Modal = ({ isOpen, hide, image }) =>\n  isOpen\n    ? ReactDOM.createPortal(\n        <>\n          <div className='modal-overlay' />\n          <div\n            className='modal-wrapper'\n            aria-modal\n            aria-hidden\n            tabIndex={-1}\n            role='dialog'\n          >\n            <div className='modal'>\n              <div className='modal-header'>\n                <button\n                  className='modal-close-button'\n                  data-dismiss='modal'\n                  aria-label='Close'\n                  onClick={hide}\n                >\n                  <span aria-hidden='true'>&times;</span>\n                </button>\n              </div>\n              <img src={image} alt='large pic' />\n            </div>\n          </div>\n        </>,\n        document.body\n      )\n    : null;\n\nexport default Modal;\n","import { useState } from 'react';\n\nconst useModal = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return {\n    isOpen,\n    toggle,\n  };\n};\n\nexport default useModal;\n","import React from 'react';\nimport '../assets/modal.css';\nimport Modal from './Modal';\nimport useModal from '../hooks/useModal';\n\nconst ImageCard = ({ image }) => {\n  const tags = image.tags.split(',');\n  const { isOpen, toggle } = useModal();\n\n  return (\n    <div className='max-w-sm rounded overflow-hidden shadow-lg'>\n      <img\n        src={image.webformatURL}\n        alt='random pic from api'\n        className='w-full'\n        style={{ height: '400px', width: '640px' }}\n        onClick={toggle}\n      />\n      <Modal isOpen={isOpen} hide={toggle} image={image.largeImageURL} />\n      <div className='px-6 py-4'>\n        <div className='flex items-center mb-2'>\n          <div className='font-bold text-purple-500 text-xl mb-2 mr-auto'>\n            Photo by {image.user}\n          </div>\n          {image.userImageURL ? (\n            <img\n              src={image.userImageURL}\n              alt='user profile pic'\n              className='rounded-full h-12 w-12'\n            />\n          ) : (\n            <img\n              src=''\n              alt=''\n              className='h-12 w-12 rounded-full border-2 border-gray-300'\n            />\n          )}\n        </div>\n        <ul>\n          <li>\n            <strong>Views: </strong>\n            {image.views}\n          </li>\n          <li>\n            <strong>Downloads: </strong>\n            {image.downloads}\n          </li>\n          <li>\n            <strong>Likes: </strong>\n            {image.likes}\n          </li>\n        </ul>\n      </div>\n      <div className='px-4 py-4 mt-2 w-12/12 border-t-2 border-teal-100 flex justify-start'>\n        {tags.map((tag, index) => (\n          <span\n            key={index}\n            className='bg-gray-200 rounded-full px-3 py-1 text-sm font-bold text-gray-700 mr-2 m-1'\n          >\n            #{tag}\n          </span>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ImageCard;\n","import React, { useState } from 'react';\n\nconst ImageSearch = ({ searchText }) => {\n  const [search, setSearch] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n    searchText(search);\n  };\n  return (\n    <div className='max-w-sm rounded overflow-hidden my-10 mx-auto'>\n      <form onSubmit={onSubmit} className='w-full max-w-full'>\n        <div className='flex items-center border-b border-b-2 border-teal-500 py-2'>\n          <input\n            type='text'\n            className='appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none'\n            placeholder='Search for images...'\n            onChange={e => setSearch(e.target.value)}\n          />\n          <button\n            className='flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded'\n            type='submit'\n          >\n            Search\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ImageSearch;\n","import React, { useState, useEffect } from 'react';\nimport ImageCard from './components/ImageCard';\nimport ImageSearch from './components/ImageSearch';\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState('true');\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    try {\n      (async () => {\n        const request = await fetch(\n          `https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${searchTerm}&image_type=photo&pretty=true`\n        );\n        const data = await request.json();\n        setImages(data.hits);\n        setIsLoading(false);\n      })();\n    } catch (err) {\n      console.log(err);\n    }\n    //eslint-disable-next-line\n  }, [searchTerm]);\n\n  return (\n    <>\n      <ImageSearch searchText={text => setSearchTerm(text)} />\n      {!isLoading && images.length === 0 && (\n        <h1 className='text-5xl text-center mx-auto mt-32'>\n          No images found for this term\n        </h1>\n      )}\n      {isLoading ? (\n        <h1 className='text-6xl text-center mx-auto mt-32'>Loading...</h1>\n      ) : (\n        <div className='w-full flex md:flex-row justify-around m-4'>\n          <div className='grid grid-cols-1 md:grid-cols-2 gap-20 '>\n            {images &&\n              images.map(image => {\n                return <ImageCard key={image.id} image={image} />;\n              })}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}